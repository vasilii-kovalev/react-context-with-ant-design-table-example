{"version":3,"sources":["components/UsersTable/index.tsx","components/Table/index.tsx","components/TableCell/index.ts","components/TableCell/Checkbox/index.tsx","pages/main/index.tsx"],"names":["Component","Table","AntDesignTable","tableCells","dataIndex","checked","onCheck","console","log","onChange","userBuilder","build","fields","id","fake","faker","random","uuid","firstName","name","lastName","columns","title","width","render","user","useUsersTable","checkedKeys","state","dispatch","userId","includes","toggleCheckedKey","users","Array","fill","map","UsersTable","data","useQuery","Promise","resolve","dataSource","pagination","MainPage"],"mappings":"uOAekBA,E,sCCbLC,E,QAAQC,E,QCAfC,ECOkD,SAAC,GAIlD,IAHLC,EAGI,EAHJA,UACAC,EAEI,EAFJA,QACAC,EACI,EADJA,QAKA,OAHAC,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAEL,cAAC,IAAD,CAA0BD,QAASA,EAASI,SAAUH,GAAvCF,I,QHmBlBM,EAAcC,gBAAY,OAAQ,CACtCC,OAAQ,CACNC,GAAIC,gBAAK,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,UAC/BC,UAAWJ,gBAAK,SAAAC,GAAK,OAAIA,EAAMI,KAAKD,eACpCE,SAAUN,gBAAK,SAAAC,GAAK,OAAIA,EAAMI,KAAKC,iBAIjCC,EAA8B,CAClC,CACEC,MAAO,aACPlB,UAAW,YACXmB,MAAO,OAET,CACED,MAAO,YACPlB,UAAW,WACXmB,MAAO,OAET,CACED,MAAO,WACPE,QA1CcxB,EA0CGG,EAzCO,SAACsB,GAAgB,IAAD,EAIpCC,cAFOC,EAF6B,EAEtCC,MAASD,YACTE,EAHsC,EAGtCA,SAEIC,EAASL,EAAKZ,GAEpB,OACE,cAACb,EAAD,2BACMyB,GADN,IAEErB,UAAW0B,EACXzB,QAASsB,EAAYI,SAASD,GAC9BxB,QAAS,kBAAM0B,YAAiBH,EAAUC,WAiC5CG,EAAQ,IAAIC,MAAM,GAAGC,KAAK,MAAMC,KAAI,kBAAM1B,OAE1C2B,EAAuB,WAAO,IAC1BC,EAASC,YAAS,SAAS,kBAAMC,QAAQC,QAAQR,MAAjDK,KAER,OAAO,cAACrC,EAAD,CAAOoB,QAASA,EAASqB,WAAYJ,EAAMK,YAAY,KI/D1DC,EAAqB,WACzB,OAAO,cAAC,EAAD,KAKMA","file":"static/js/4.a41459fc.chunk.js","sourcesContent":["import { ColumnType } from 'antd/es/table';\nimport * as React from 'react';\nimport { useQuery } from 'react-query';\nimport { build, fake } from '@jackfranklin/test-data-bot';\nimport { Table } from 'components/Table';\nimport { tableCells } from 'components/TableCell';\nimport { useUsersTable, toggleCheckedKey } from 'context/users-table';\nimport type { ITableCellCheckbox } from 'components/TableCell/Checkbox';\n\ninterface User {\n  id: string;\n  firstName: string;\n  lastName: string;\n}\n\nconst withUser = (Component: React.FC<ITableCellCheckbox>) => {\n  const AugmentedCheckbox = (user: User) => {\n    const {\n      state: { checkedKeys },\n      dispatch,\n    } = useUsersTable();\n    const userId = user.id;\n\n    return (\n      <Component\n        {...user}\n        dataIndex={userId}\n        checked={checkedKeys.includes(userId)}\n        onCheck={() => toggleCheckedKey(dispatch, userId)}\n      />\n    );\n  };\n\n  return AugmentedCheckbox;\n};\n\nconst userBuilder = build<User>('User', {\n  fields: {\n    id: fake(faker => faker.random.uuid()),\n    firstName: fake(faker => faker.name.firstName()),\n    lastName: fake(faker => faker.name.lastName()),\n  },\n});\n\nconst columns: ColumnType<User>[] = [\n  {\n    title: 'First name',\n    dataIndex: 'firstName',\n    width: '40%',\n  },\n  {\n    title: 'Last name',\n    dataIndex: 'lastName',\n    width: '40%',\n  },\n  {\n    title: 'Selected',\n    render: withUser(tableCells.checkbox),\n  },\n];\n\nconst users = new Array(5).fill(null).map(() => userBuilder());\n\nconst UsersTable: React.FC = () => {\n  const { data } = useQuery('users', () => Promise.resolve(users));\n\n  return <Table columns={columns} dataSource={data} pagination={false} />;\n};\n\nexport { UsersTable };\n","import AntDesignTable from 'antd/es/table';\n\nexport const Table = AntDesignTable;\n","import { TableCellCheckbox } from './Checkbox';\n\nconst tableCells = {\n  checkbox: TableCellCheckbox,\n};\n\nexport { tableCells };\n","import Checkbox, { CheckboxChangeEvent } from 'antd/es/checkbox';\nimport * as React from 'react';\n\ninterface ITableCellCheckbox {\n  dataIndex: string | number;\n  checked?: boolean;\n  onCheck?: (event: CheckboxChangeEvent) => void;\n}\n\nconst TableCellCheckbox: React.FC<ITableCellCheckbox> = ({\n  dataIndex,\n  checked,\n  onCheck,\n}) => {\n  console.log(checked);\n  console.log(onCheck);\n\n  return <Checkbox key={dataIndex} checked={checked} onChange={onCheck} />;\n};\n\nexport { TableCellCheckbox };\n\nexport type { ITableCellCheckbox };\n","import * as React from 'react';\nimport { UsersTable } from 'components/UsersTable';\n\nconst MainPage: React.FC = () => {\n  return <UsersTable />;\n};\n\nexport { MainPage };\n\nexport default MainPage;\n"],"sourceRoot":""}